{"ast":null,"code":"import { useRect } from \"@vant/use\";\nimport { loadImageAsync } from \"./util.mjs\";\nimport { noop } from \"../../utils/index.mjs\";\nvar stdin_default = lazyManager => ({\n  props: {\n    src: [String, Object],\n    tag: {\n      type: String,\n      default: \"img\"\n    }\n  },\n  render(h) {\n    return h(this.tag, {\n      attrs: {\n        src: this.renderSrc\n      }\n    }, this.$slots.default);\n  },\n  data() {\n    return {\n      el: null,\n      options: {\n        src: \"\",\n        error: \"\",\n        loading: \"\",\n        attempt: lazyManager.options.attempt\n      },\n      state: {\n        loaded: false,\n        error: false,\n        attempt: 0\n      },\n      renderSrc: \"\"\n    };\n  },\n  watch: {\n    src() {\n      this.init();\n      lazyManager.addLazyBox(this);\n      lazyManager.lazyLoadHandler();\n    }\n  },\n  created() {\n    this.init();\n    this.renderSrc = this.options.loading;\n  },\n  mounted() {\n    this.el = this.$el;\n    lazyManager.addLazyBox(this);\n    lazyManager.lazyLoadHandler();\n  },\n  beforeUnmount() {\n    lazyManager.removeComponent(this);\n  },\n  methods: {\n    init() {\n      const {\n        src,\n        loading,\n        error\n      } = lazyManager.valueFormatter(this.src);\n      this.state.loaded = false;\n      this.options.src = src;\n      this.options.error = error;\n      this.options.loading = loading;\n      this.renderSrc = this.options.loading;\n    },\n    checkInView() {\n      const rect = useRect(this.$el);\n      return rect.top < window.innerHeight * lazyManager.options.preLoad && rect.bottom > 0 && rect.left < window.innerWidth * lazyManager.options.preLoad && rect.right > 0;\n    },\n    load(onFinish = noop) {\n      if (this.state.attempt > this.options.attempt - 1 && this.state.error) {\n        if (process.env.NODE_ENV !== \"production\" && !lazyManager.options.silent) {\n          console.log(`[@vant/lazyload] ${this.options.src} tried too more than ${this.options.attempt} times`);\n        }\n        onFinish();\n        return;\n      }\n      const {\n        src\n      } = this.options;\n      loadImageAsync({\n        src\n      }, ({\n        src: src2\n      }) => {\n        this.renderSrc = src2;\n        this.state.loaded = true;\n      }, () => {\n        this.state.attempt++;\n        this.renderSrc = this.options.error;\n        this.state.error = true;\n      });\n    }\n  }\n});\nexport { stdin_default as default };","map":{"version":3,"names":["useRect","loadImageAsync","noop","stdin_default","lazyManager","props","src","String","Object","tag","type","default","render","h","attrs","renderSrc","$slots","data","el","options","error","loading","attempt","state","loaded","watch","init","addLazyBox","lazyLoadHandler","created","mounted","$el","beforeUnmount","removeComponent","methods","valueFormatter","checkInView","rect","top","window","innerHeight","preLoad","bottom","left","innerWidth","right","load","onFinish","process","env","NODE_ENV","silent","console","log","src2"],"sources":["C:/Code/VScode/VUE/项目/01-xiaoms/node_modules/vant/es/lazyload/vue-lazyload/lazy-image.mjs"],"sourcesContent":["import { useRect } from \"@vant/use\";\nimport { loadImageAsync } from \"./util.mjs\";\nimport { noop } from \"../../utils/index.mjs\";\nvar stdin_default = (lazyManager) => ({\n  props: {\n    src: [String, Object],\n    tag: {\n      type: String,\n      default: \"img\"\n    }\n  },\n  render(h) {\n    return h(\n      this.tag,\n      {\n        attrs: {\n          src: this.renderSrc\n        }\n      },\n      this.$slots.default\n    );\n  },\n  data() {\n    return {\n      el: null,\n      options: {\n        src: \"\",\n        error: \"\",\n        loading: \"\",\n        attempt: lazyManager.options.attempt\n      },\n      state: {\n        loaded: false,\n        error: false,\n        attempt: 0\n      },\n      renderSrc: \"\"\n    };\n  },\n  watch: {\n    src() {\n      this.init();\n      lazyManager.addLazyBox(this);\n      lazyManager.lazyLoadHandler();\n    }\n  },\n  created() {\n    this.init();\n    this.renderSrc = this.options.loading;\n  },\n  mounted() {\n    this.el = this.$el;\n    lazyManager.addLazyBox(this);\n    lazyManager.lazyLoadHandler();\n  },\n  beforeUnmount() {\n    lazyManager.removeComponent(this);\n  },\n  methods: {\n    init() {\n      const { src, loading, error } = lazyManager.valueFormatter(this.src);\n      this.state.loaded = false;\n      this.options.src = src;\n      this.options.error = error;\n      this.options.loading = loading;\n      this.renderSrc = this.options.loading;\n    },\n    checkInView() {\n      const rect = useRect(this.$el);\n      return rect.top < window.innerHeight * lazyManager.options.preLoad && rect.bottom > 0 && rect.left < window.innerWidth * lazyManager.options.preLoad && rect.right > 0;\n    },\n    load(onFinish = noop) {\n      if (this.state.attempt > this.options.attempt - 1 && this.state.error) {\n        if (process.env.NODE_ENV !== \"production\" && !lazyManager.options.silent) {\n          console.log(\n            `[@vant/lazyload] ${this.options.src} tried too more than ${this.options.attempt} times`\n          );\n        }\n        onFinish();\n        return;\n      }\n      const { src } = this.options;\n      loadImageAsync(\n        { src },\n        ({ src: src2 }) => {\n          this.renderSrc = src2;\n          this.state.loaded = true;\n        },\n        () => {\n          this.state.attempt++;\n          this.renderSrc = this.options.error;\n          this.state.error = true;\n        }\n      );\n    }\n  }\n});\nexport {\n  stdin_default as default\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}