{"ast":null,"code":"import xiaoms from \"@/util/http\";\nfunction getIP(callback) {\n  let recode = {};\n  let RTCPeerConnection = window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection;\n  if (!RTCPeerConnection) {\n    let win = iframe.contentWindow;\n    RTCPeerConnection = win.RTCPeerConnection || win.mozRTCPeerConnection || win.webkitRTCPeerConnection;\n  }\n  //创建实例，生成连接\n  let pc = new RTCPeerConnection();\n  // 匹配字符串中符合ip地址的字段\n  function handleCandidate(candidate) {\n    let ip_regexp = /([0-9]{1,3}(\\.[0-9]{1,3}){3}|([a-f0-9]{1,4}((:[a-f0-9]{1,4}){7}|:+[a-f0-9]{1,4}){6}))/;\n    let ip_isMatch = candidate.match(ip_regexp)[1];\n    if (!recode[ip_isMatch]) {\n      callback(ip_isMatch);\n      recode[ip_isMatch] = true;\n    }\n  }\n  //监听icecandidate事件\n  pc.onicecandidate = ice => {\n    if (ice.candidate) {\n      handleCandidate(ice.candidate.candidate);\n    }\n  };\n  //建立一个伪数据的通道\n  pc.createDataChannel(\"\");\n  pc.createOffer(res => {\n    pc.setLocalDescription(res);\n  }, () => {});\n\n  //延迟，让一切都能完成\n  setTimeout(() => {\n    let lines = pc.localDescription.sdp.split(\"\\n\");\n    lines.forEach(item => {\n      if (item.indexOf(\"a=candidate:\") === 0) {\n        handleCandidate(item);\n      }\n    });\n  }, 1000);\n}\ngetIP(function (ip) {\n  return ip;\n});\n// import local from \"@/util/local\";\nexport const getList = async pet_type => {\n  let res = await fetch(`http://192.168.190.97:8081/toDayKnowLedge?pet_type=${pet_type}`).then(res => res.json());\n  console.log(\"res\", res);\n  return res;\n};\nexport const getRecommendList = params => {\n  return xiaoms.get(`/v3/content/opgc/IndexV3.html?do=GetListNew&pet_type=${params.pet_type}&param=${params.param}&page=${params.page}`);\n};\nexport const getEatList = params => {\n  return xiaoms.post(\"/v3/content/Tools/Eat.html\", params);\n};\nexport const getAbleList = params => {\n  return xiaoms.get(\"/v3/content/Tools/Do.html\", {\n    params\n  });\n};\nexport const getIlnessList = params => {\n  return xiaoms.get(\"/v3/content/Tools/Disease/main.html\", {\n    params\n  });\n};\nexport const getUserPet = params => {\n  return xiaoms.post(\"/v3/user/pet/Main.html\", params);\n};","map":{"version":3,"names":["xiaoms","getIP","callback","recode","RTCPeerConnection","window","mozRTCPeerConnection","webkitRTCPeerConnection","win","iframe","contentWindow","pc","handleCandidate","candidate","ip_regexp","ip_isMatch","match","onicecandidate","ice","createDataChannel","createOffer","res","setLocalDescription","setTimeout","lines","localDescription","sdp","split","forEach","item","indexOf","ip","getList","pet_type","fetch","then","json","console","log","getRecommendList","params","get","param","page","getEatList","post","getAbleList","getIlnessList","getUserPet"],"sources":["C:/Users/yangp/Desktop/01-xiaoms/src/api/xiaomengshu.js"],"sourcesContent":["import xiaoms from \"@/util/http\";\r\nfunction getIP(callback) {\r\n  let recode = {};\r\n  let RTCPeerConnection = window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection;\r\n  if (!RTCPeerConnection) {\r\n    let win = iframe.contentWindow;\r\n    RTCPeerConnection = win.RTCPeerConnection || win.mozRTCPeerConnection || win.webkitRTCPeerConnection;\r\n  }\r\n  //创建实例，生成连接\r\n  let pc = new RTCPeerConnection();\r\n  // 匹配字符串中符合ip地址的字段\r\n  function handleCandidate(candidate) {\r\n    let ip_regexp = /([0-9]{1,3}(\\.[0-9]{1,3}){3}|([a-f0-9]{1,4}((:[a-f0-9]{1,4}){7}|:+[a-f0-9]{1,4}){6}))/;\r\n    let ip_isMatch = candidate.match(ip_regexp)[1];\r\n    if (!recode[ip_isMatch]) {\r\n      callback(ip_isMatch);\r\n      recode[ip_isMatch] = true;\r\n    }\r\n  }\r\n  //监听icecandidate事件\r\n  pc.onicecandidate = (ice) => {\r\n    if (ice.candidate) {\r\n      handleCandidate(ice.candidate.candidate);\r\n    }\r\n  };\r\n  //建立一个伪数据的通道\r\n  pc.createDataChannel(\"\");\r\n  pc.createOffer(\r\n    (res) => {\r\n      pc.setLocalDescription(res);\r\n    },\r\n    () => {}\r\n  );\r\n\r\n  //延迟，让一切都能完成\r\n  setTimeout(() => {\r\n    let lines = pc.localDescription.sdp.split(\"\\n\");\r\n    lines.forEach((item) => {\r\n      if (item.indexOf(\"a=candidate:\") === 0) {\r\n        handleCandidate(item);\r\n      }\r\n    });\r\n  }, 1000);\r\n}\r\n\r\ngetIP(function (ip) {\r\n  return ip;\r\n});\r\n// import local from \"@/util/local\";\r\nexport const getList = async (pet_type) => {\r\n  let res = await fetch(`http://192.168.190.97:8081/toDayKnowLedge?pet_type=${pet_type}`).then((res) => res.json());\r\n  console.log(\"res\", res);\r\n  return res;\r\n};\r\nexport const getRecommendList = (params) => {\r\n  return xiaoms.get(\r\n    `/v3/content/opgc/IndexV3.html?do=GetListNew&pet_type=${params.pet_type}&param=${params.param}&page=${params.page}`\r\n  );\r\n};\r\n\r\nexport const getEatList = (params) => {\r\n  return xiaoms.post(\"/v3/content/Tools/Eat.html\", params);\r\n};\r\nexport const getAbleList = (params) => {\r\n  return xiaoms.get(\"/v3/content/Tools/Do.html\", {\r\n    params,\r\n  });\r\n};\r\nexport const getIlnessList = (params) => {\r\n  return xiaoms.get(\"/v3/content/Tools/Disease/main.html\", {\r\n    params,\r\n  });\r\n};\r\nexport const getUserPet = (params) => {\r\n  return xiaoms.post(\"/v3/user/pet/Main.html\", params);\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}