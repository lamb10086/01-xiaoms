{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\";\nimport { ref, reactive, computed, defineComponent } from \"vue\";\nimport { clamp, isDef, numericProp, preventDefault, callInterceptor, createNamespace, makeNumericProp } from \"../utils/index.mjs\";\nimport { useRect, useClickAway, useEventListener } from \"@vant/use\";\nimport { useTouch } from \"../composables/use-touch.mjs\";\nimport { useExpose } from \"../composables/use-expose.mjs\";\nconst [name, bem] = createNamespace(\"swipe-cell\");\nconst swipeCellProps = {\n  name: makeNumericProp(\"\"),\n  disabled: Boolean,\n  leftWidth: numericProp,\n  rightWidth: numericProp,\n  beforeClose: Function,\n  stopPropagation: Boolean\n};\nvar stdin_default = defineComponent({\n  name,\n  props: swipeCellProps,\n  emits: [\"open\", \"close\", \"click\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    let opened;\n    let lockClick;\n    let startOffset;\n    const root = ref();\n    const leftRef = ref();\n    const rightRef = ref();\n    const state = reactive({\n      offset: 0,\n      dragging: false\n    });\n    const touch = useTouch();\n    const getWidthByRef = ref2 => ref2.value ? useRect(ref2).width : 0;\n    const leftWidth = computed(() => isDef(props.leftWidth) ? +props.leftWidth : getWidthByRef(leftRef));\n    const rightWidth = computed(() => isDef(props.rightWidth) ? +props.rightWidth : getWidthByRef(rightRef));\n    const open = side => {\n      state.offset = side === \"left\" ? leftWidth.value : -rightWidth.value;\n      if (!opened) {\n        opened = true;\n        emit(\"open\", {\n          name: props.name,\n          position: side\n        });\n      }\n    };\n    const close = position => {\n      state.offset = 0;\n      if (opened) {\n        opened = false;\n        emit(\"close\", {\n          name: props.name,\n          position\n        });\n      }\n    };\n    const toggle = side => {\n      const offset = Math.abs(state.offset);\n      const THRESHOLD = 0.15;\n      const threshold = opened ? 1 - THRESHOLD : THRESHOLD;\n      const width = side === \"left\" ? leftWidth.value : rightWidth.value;\n      if (width && offset > width * threshold) {\n        open(side);\n      } else {\n        close(side);\n      }\n    };\n    const onTouchStart = event => {\n      if (!props.disabled) {\n        startOffset = state.offset;\n        touch.start(event);\n      }\n    };\n    const onTouchMove = event => {\n      if (props.disabled) {\n        return;\n      }\n      const {\n        deltaX\n      } = touch;\n      touch.move(event);\n      if (touch.isHorizontal()) {\n        lockClick = true;\n        state.dragging = true;\n        const isEdge = !opened || deltaX.value * startOffset < 0;\n        if (isEdge) {\n          preventDefault(event, props.stopPropagation);\n        }\n        state.offset = clamp(deltaX.value + startOffset, -rightWidth.value, leftWidth.value);\n      }\n    };\n    const onTouchEnd = () => {\n      if (state.dragging) {\n        state.dragging = false;\n        toggle(state.offset > 0 ? \"left\" : \"right\");\n        setTimeout(() => {\n          lockClick = false;\n        }, 0);\n      }\n    };\n    const onClick = (position = \"outside\") => {\n      emit(\"click\", position);\n      if (opened && !lockClick) {\n        callInterceptor(props.beforeClose, {\n          args: [{\n            name: props.name,\n            position\n          }],\n          done: () => close(position)\n        });\n      }\n    };\n    const getClickHandler = (position, stop) => event => {\n      if (stop) {\n        event.stopPropagation();\n      }\n      onClick(position);\n    };\n    const renderSideContent = (side, ref2) => {\n      const contentSlot = slots[side];\n      if (contentSlot) {\n        return _createVNode(\"div\", {\n          \"ref\": ref2,\n          \"class\": bem(side),\n          \"onClick\": getClickHandler(side, true)\n        }, [contentSlot()]);\n      }\n    };\n    useExpose({\n      open,\n      close\n    });\n    useClickAway(root, () => onClick(\"outside\"), {\n      eventName: \"touchstart\"\n    });\n    useEventListener(\"touchmove\", onTouchMove, {\n      target: root\n    });\n    return () => {\n      var _a;\n      const wrapperStyle = {\n        transform: `translate3d(${state.offset}px, 0, 0)`,\n        transitionDuration: state.dragging ? \"0s\" : \".6s\"\n      };\n      return _createVNode(\"div\", {\n        \"ref\": root,\n        \"class\": bem(),\n        \"onClick\": getClickHandler(\"cell\", lockClick),\n        \"onTouchstartPassive\": onTouchStart,\n        \"onTouchend\": onTouchEnd,\n        \"onTouchcancel\": onTouchEnd\n      }, [_createVNode(\"div\", {\n        \"class\": bem(\"wrapper\"),\n        \"style\": wrapperStyle\n      }, [renderSideContent(\"left\", leftRef), (_a = slots.default) == null ? void 0 : _a.call(slots), renderSideContent(\"right\", rightRef)])]);\n    };\n  }\n});\nexport { stdin_default as default, swipeCellProps };","map":{"version":3,"names":["createVNode","_createVNode","ref","reactive","computed","defineComponent","clamp","isDef","numericProp","preventDefault","callInterceptor","createNamespace","makeNumericProp","useRect","useClickAway","useEventListener","useTouch","useExpose","name","bem","swipeCellProps","disabled","Boolean","leftWidth","rightWidth","beforeClose","Function","stopPropagation","stdin_default","props","emits","setup","emit","slots","opened","lockClick","startOffset","root","leftRef","rightRef","state","offset","dragging","touch","getWidthByRef","ref2","value","width","open","side","position","close","toggle","Math","abs","THRESHOLD","threshold","onTouchStart","event","start","onTouchMove","deltaX","move","isHorizontal","isEdge","onTouchEnd","setTimeout","onClick","args","done","getClickHandler","stop","renderSideContent","contentSlot","eventName","target","_a","wrapperStyle","transform","transitionDuration","default","call"],"sources":["C:/Code/VScode/VUE/项目/01-xiaoms/node_modules/vant/es/swipe-cell/SwipeCell.mjs"],"sourcesContent":["import { createVNode as _createVNode } from \"vue\";\nimport { ref, reactive, computed, defineComponent } from \"vue\";\nimport { clamp, isDef, numericProp, preventDefault, callInterceptor, createNamespace, makeNumericProp } from \"../utils/index.mjs\";\nimport { useRect, useClickAway, useEventListener } from \"@vant/use\";\nimport { useTouch } from \"../composables/use-touch.mjs\";\nimport { useExpose } from \"../composables/use-expose.mjs\";\nconst [name, bem] = createNamespace(\"swipe-cell\");\nconst swipeCellProps = {\n  name: makeNumericProp(\"\"),\n  disabled: Boolean,\n  leftWidth: numericProp,\n  rightWidth: numericProp,\n  beforeClose: Function,\n  stopPropagation: Boolean\n};\nvar stdin_default = defineComponent({\n  name,\n  props: swipeCellProps,\n  emits: [\"open\", \"close\", \"click\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    let opened;\n    let lockClick;\n    let startOffset;\n    const root = ref();\n    const leftRef = ref();\n    const rightRef = ref();\n    const state = reactive({\n      offset: 0,\n      dragging: false\n    });\n    const touch = useTouch();\n    const getWidthByRef = (ref2) => ref2.value ? useRect(ref2).width : 0;\n    const leftWidth = computed(() => isDef(props.leftWidth) ? +props.leftWidth : getWidthByRef(leftRef));\n    const rightWidth = computed(() => isDef(props.rightWidth) ? +props.rightWidth : getWidthByRef(rightRef));\n    const open = (side) => {\n      state.offset = side === \"left\" ? leftWidth.value : -rightWidth.value;\n      if (!opened) {\n        opened = true;\n        emit(\"open\", {\n          name: props.name,\n          position: side\n        });\n      }\n    };\n    const close = (position) => {\n      state.offset = 0;\n      if (opened) {\n        opened = false;\n        emit(\"close\", {\n          name: props.name,\n          position\n        });\n      }\n    };\n    const toggle = (side) => {\n      const offset = Math.abs(state.offset);\n      const THRESHOLD = 0.15;\n      const threshold = opened ? 1 - THRESHOLD : THRESHOLD;\n      const width = side === \"left\" ? leftWidth.value : rightWidth.value;\n      if (width && offset > width * threshold) {\n        open(side);\n      } else {\n        close(side);\n      }\n    };\n    const onTouchStart = (event) => {\n      if (!props.disabled) {\n        startOffset = state.offset;\n        touch.start(event);\n      }\n    };\n    const onTouchMove = (event) => {\n      if (props.disabled) {\n        return;\n      }\n      const {\n        deltaX\n      } = touch;\n      touch.move(event);\n      if (touch.isHorizontal()) {\n        lockClick = true;\n        state.dragging = true;\n        const isEdge = !opened || deltaX.value * startOffset < 0;\n        if (isEdge) {\n          preventDefault(event, props.stopPropagation);\n        }\n        state.offset = clamp(deltaX.value + startOffset, -rightWidth.value, leftWidth.value);\n      }\n    };\n    const onTouchEnd = () => {\n      if (state.dragging) {\n        state.dragging = false;\n        toggle(state.offset > 0 ? \"left\" : \"right\");\n        setTimeout(() => {\n          lockClick = false;\n        }, 0);\n      }\n    };\n    const onClick = (position = \"outside\") => {\n      emit(\"click\", position);\n      if (opened && !lockClick) {\n        callInterceptor(props.beforeClose, {\n          args: [{\n            name: props.name,\n            position\n          }],\n          done: () => close(position)\n        });\n      }\n    };\n    const getClickHandler = (position, stop) => (event) => {\n      if (stop) {\n        event.stopPropagation();\n      }\n      onClick(position);\n    };\n    const renderSideContent = (side, ref2) => {\n      const contentSlot = slots[side];\n      if (contentSlot) {\n        return _createVNode(\"div\", {\n          \"ref\": ref2,\n          \"class\": bem(side),\n          \"onClick\": getClickHandler(side, true)\n        }, [contentSlot()]);\n      }\n    };\n    useExpose({\n      open,\n      close\n    });\n    useClickAway(root, () => onClick(\"outside\"), {\n      eventName: \"touchstart\"\n    });\n    useEventListener(\"touchmove\", onTouchMove, {\n      target: root\n    });\n    return () => {\n      var _a;\n      const wrapperStyle = {\n        transform: `translate3d(${state.offset}px, 0, 0)`,\n        transitionDuration: state.dragging ? \"0s\" : \".6s\"\n      };\n      return _createVNode(\"div\", {\n        \"ref\": root,\n        \"class\": bem(),\n        \"onClick\": getClickHandler(\"cell\", lockClick),\n        \"onTouchstartPassive\": onTouchStart,\n        \"onTouchend\": onTouchEnd,\n        \"onTouchcancel\": onTouchEnd\n      }, [_createVNode(\"div\", {\n        \"class\": bem(\"wrapper\"),\n        \"style\": wrapperStyle\n      }, [renderSideContent(\"left\", leftRef), (_a = slots.default) == null ? void 0 : _a.call(slots), renderSideContent(\"right\", rightRef)])]);\n    };\n  }\n});\nexport {\n  stdin_default as default,\n  swipeCellProps\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}