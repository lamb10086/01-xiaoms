{"ast":null,"code":"\"use strict\";\n\nvar _utils = require(\"./utils\");\nvar _placeholders = require(\"./placeholders\");\nconst defineType = (0, _utils.defineAliasedType)(\"Miscellaneous\");\n{\n  defineType(\"Noop\", {\n    visitor: []\n  });\n}\ndefineType(\"Placeholder\", {\n  visitor: [],\n  builder: [\"expectedNode\", \"name\"],\n  fields: {\n    name: {\n      validate: (0, _utils.assertNodeType)(\"Identifier\")\n    },\n    expectedNode: {\n      validate: (0, _utils.assertOneOf)(..._placeholders.PLACEHOLDERS)\n    }\n  }\n});\ndefineType(\"V8IntrinsicIdentifier\", {\n  builder: [\"name\"],\n  fields: {\n    name: {\n      validate: (0, _utils.assertValueType)(\"string\")\n    }\n  }\n});","map":{"version":3,"mappings":";;AAAA;AAMA;AAEA,MAAMA,UAAU,GAAG,8BAAkB,eAAlB,CAAnB;AAEmC;EACjCA,UAAU,CAAC,MAAD,EAAS;IACjBC,OAAO,EAAE;EADQ,CAAT,CAAV;AAGD;AAEDD,UAAU,CAAC,aAAD,EAAgB;EACxBC,OAAO,EAAE,EADe;EAExBC,OAAO,EAAE,CAAC,cAAD,EAAiB,MAAjB,CAFe;EAIxBC,MAAM,EAAE;IACNC,IAAI,EAAE;MACJC,QAAQ,EAAE,2BAAe,YAAf;IADN,CADA;IAINC,YAAY,EAAE;MACZD,QAAQ,EAAE,wBAAY,GAAGE,0BAAf;IADE;EAJR;AAJgB,CAAhB,CAAV;AAcAP,UAAU,CAAC,uBAAD,EAA0B;EAClCE,OAAO,EAAE,CAAC,MAAD,CADyB;EAElCC,MAAM,EAAE;IACNC,IAAI,EAAE;MACJC,QAAQ,EAAE,4BAAgB,QAAhB;IADN;EADA;AAF0B,CAA1B,CAAV","names":["defineType","visitor","builder","fields","name","validate","expectedNode","PLACEHOLDERS"],"sources":["../../src/definitions/misc.ts"],"sourcesContent":["import {\n  defineAliasedType,\n  assertNodeType,\n  assertOneOf,\n  assertValueType,\n} from \"./utils\";\nimport { PLACEHOLDERS } from \"./placeholders\";\n\nconst defineType = defineAliasedType(\"Miscellaneous\");\n\nif (!process.env.BABEL_8_BREAKING) {\n  defineType(\"Noop\", {\n    visitor: [],\n  });\n}\n\ndefineType(\"Placeholder\", {\n  visitor: [],\n  builder: [\"expectedNode\", \"name\"],\n  // aliases: [], defined in placeholders.js\n  fields: {\n    name: {\n      validate: assertNodeType(\"Identifier\"),\n    },\n    expectedNode: {\n      validate: assertOneOf(...PLACEHOLDERS),\n    },\n  },\n});\n\ndefineType(\"V8IntrinsicIdentifier\", {\n  builder: [\"name\"],\n  fields: {\n    name: {\n      validate: assertValueType(\"string\"),\n    },\n  },\n});\n"]},"metadata":{},"sourceType":"module"}