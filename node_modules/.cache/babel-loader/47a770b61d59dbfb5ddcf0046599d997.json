{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\";\nimport { computed, defineComponent, ref } from \"vue\";\nimport { addUnit, truthProp, numericProp, preventDefault, makeStringProp, makeNumberProp, makeNumericProp, createNamespace } from \"../utils/index.mjs\";\nimport { useRect, useCustomFieldValue, useEventListener } from \"@vant/use\";\nimport { useRefs } from \"../composables/use-refs.mjs\";\nimport { useTouch } from \"../composables/use-touch.mjs\";\nimport { Icon } from \"../icon/index.mjs\";\nconst [name, bem] = createNamespace(\"rate\");\nfunction getRateStatus(value, index, allowHalf, readonly) {\n  if (value >= index) {\n    return {\n      status: \"full\",\n      value: 1\n    };\n  }\n  if (value + 0.5 >= index && allowHalf && !readonly) {\n    return {\n      status: \"half\",\n      value: 0.5\n    };\n  }\n  if (value + 1 >= index && allowHalf && readonly) {\n    const cardinal = 10 ** 10;\n    return {\n      status: \"half\",\n      value: Math.round((value - index + 1) * cardinal) / cardinal\n    };\n  }\n  return {\n    status: \"void\",\n    value: 0\n  };\n}\nconst rateProps = {\n  size: numericProp,\n  icon: makeStringProp(\"star\"),\n  color: String,\n  count: makeNumericProp(5),\n  gutter: numericProp,\n  readonly: Boolean,\n  disabled: Boolean,\n  voidIcon: makeStringProp(\"star-o\"),\n  allowHalf: Boolean,\n  voidColor: String,\n  touchable: truthProp,\n  iconPrefix: String,\n  modelValue: makeNumberProp(0),\n  disabledColor: String\n};\nvar stdin_default = defineComponent({\n  name,\n  props: rateProps,\n  emits: [\"change\", \"update:modelValue\"],\n  setup(props, {\n    emit\n  }) {\n    const touch = useTouch();\n    const [itemRefs, setItemRefs] = useRefs();\n    const groupRef = ref();\n    const untouchable = () => props.readonly || props.disabled || !props.touchable;\n    const list = computed(() => Array(+props.count).fill(\"\").map((_, i) => getRateStatus(props.modelValue, i + 1, props.allowHalf, props.readonly)));\n    let ranges;\n    let groupRefRect;\n    let minRectTop = Number.MAX_SAFE_INTEGER;\n    let maxRectTop = Number.MIN_SAFE_INTEGER;\n    const updateRanges = () => {\n      groupRefRect = useRect(groupRef);\n      const rects = itemRefs.value.map(useRect);\n      ranges = [];\n      rects.forEach((rect, index) => {\n        minRectTop = Math.min(rect.top, minRectTop);\n        maxRectTop = Math.max(rect.top, maxRectTop);\n        if (props.allowHalf) {\n          ranges.push({\n            score: index + 0.5,\n            left: rect.left,\n            top: rect.top,\n            height: rect.height\n          }, {\n            score: index + 1,\n            left: rect.left + rect.width / 2,\n            top: rect.top,\n            height: rect.height\n          });\n        } else {\n          ranges.push({\n            score: index + 1,\n            left: rect.left,\n            top: rect.top,\n            height: rect.height\n          });\n        }\n      });\n    };\n    const getScoreByPosition = (x, y) => {\n      for (let i = ranges.length - 1; i > 0; i--) {\n        if (y >= groupRefRect.top && y <= groupRefRect.bottom) {\n          if (x > ranges[i].left && y >= ranges[i].top && y <= ranges[i].top + ranges[i].height) {\n            return ranges[i].score;\n          }\n        } else {\n          const curTop = y < groupRefRect.top ? minRectTop : maxRectTop;\n          if (x > ranges[i].left && ranges[i].top === curTop) {\n            return ranges[i].score;\n          }\n        }\n      }\n      return props.allowHalf ? 0.5 : 1;\n    };\n    const select = index => {\n      if (!props.disabled && !props.readonly && index !== props.modelValue) {\n        emit(\"update:modelValue\", index);\n        emit(\"change\", index);\n      }\n    };\n    const onTouchStart = event => {\n      if (untouchable()) {\n        return;\n      }\n      touch.start(event);\n      updateRanges();\n    };\n    const onTouchMove = event => {\n      if (untouchable()) {\n        return;\n      }\n      touch.move(event);\n      if (touch.isHorizontal()) {\n        const {\n          clientX,\n          clientY\n        } = event.touches[0];\n        preventDefault(event);\n        select(getScoreByPosition(clientX, clientY));\n      }\n    };\n    const renderStar = (item, index) => {\n      const {\n        icon,\n        size,\n        color,\n        count,\n        gutter,\n        voidIcon,\n        disabled,\n        voidColor,\n        allowHalf,\n        iconPrefix,\n        disabledColor\n      } = props;\n      const score = index + 1;\n      const isFull = item.status === \"full\";\n      const isVoid = item.status === \"void\";\n      const renderHalf = allowHalf && item.value > 0 && item.value < 1;\n      let style;\n      if (gutter && score !== +count) {\n        style = {\n          paddingRight: addUnit(gutter)\n        };\n      }\n      const onClickItem = event => {\n        updateRanges();\n        select(allowHalf ? getScoreByPosition(event.clientX, event.clientY) : score);\n      };\n      return _createVNode(\"div\", {\n        \"key\": index,\n        \"ref\": setItemRefs(index),\n        \"role\": \"radio\",\n        \"style\": style,\n        \"class\": bem(\"item\"),\n        \"tabindex\": disabled ? void 0 : 0,\n        \"aria-setsize\": count,\n        \"aria-posinset\": score,\n        \"aria-checked\": !isVoid,\n        \"onClick\": onClickItem\n      }, [_createVNode(Icon, {\n        \"size\": size,\n        \"name\": isFull ? icon : voidIcon,\n        \"class\": bem(\"icon\", {\n          disabled,\n          full: isFull\n        }),\n        \"color\": disabled ? disabledColor : isFull ? color : voidColor,\n        \"classPrefix\": iconPrefix\n      }, null), renderHalf && _createVNode(Icon, {\n        \"size\": size,\n        \"style\": {\n          width: item.value + \"em\"\n        },\n        \"name\": isVoid ? voidIcon : icon,\n        \"class\": bem(\"icon\", [\"half\", {\n          disabled,\n          full: !isVoid\n        }]),\n        \"color\": disabled ? disabledColor : isVoid ? voidColor : color,\n        \"classPrefix\": iconPrefix\n      }, null)]);\n    };\n    useCustomFieldValue(() => props.modelValue);\n    useEventListener(\"touchmove\", onTouchMove, {\n      target: groupRef\n    });\n    return () => _createVNode(\"div\", {\n      \"ref\": groupRef,\n      \"role\": \"radiogroup\",\n      \"class\": bem({\n        readonly: props.readonly,\n        disabled: props.disabled\n      }),\n      \"tabindex\": props.disabled ? void 0 : 0,\n      \"aria-disabled\": props.disabled,\n      \"aria-readonly\": props.readonly,\n      \"onTouchstartPassive\": onTouchStart\n    }, [list.value.map(renderStar)]);\n  }\n});\nexport { stdin_default as default, rateProps };","map":{"version":3,"names":["createVNode","_createVNode","computed","defineComponent","ref","addUnit","truthProp","numericProp","preventDefault","makeStringProp","makeNumberProp","makeNumericProp","createNamespace","useRect","useCustomFieldValue","useEventListener","useRefs","useTouch","Icon","name","bem","getRateStatus","value","index","allowHalf","readonly","status","cardinal","Math","round","rateProps","size","icon","color","String","count","gutter","Boolean","disabled","voidIcon","voidColor","touchable","iconPrefix","modelValue","disabledColor","stdin_default","props","emits","setup","emit","touch","itemRefs","setItemRefs","groupRef","untouchable","list","Array","fill","map","_","i","ranges","groupRefRect","minRectTop","Number","MAX_SAFE_INTEGER","maxRectTop","MIN_SAFE_INTEGER","updateRanges","rects","forEach","rect","min","top","max","push","score","left","height","width","getScoreByPosition","x","y","length","bottom","curTop","select","onTouchStart","event","start","onTouchMove","move","isHorizontal","clientX","clientY","touches","renderStar","item","isFull","isVoid","renderHalf","style","paddingRight","onClickItem","full","target","default"],"sources":["C:/Users/yangp/Desktop/01-xiaoms/node_modules/vant/es/rate/Rate.mjs"],"sourcesContent":["import { createVNode as _createVNode } from \"vue\";\r\nimport { computed, defineComponent, ref } from \"vue\";\r\nimport { addUnit, truthProp, numericProp, preventDefault, makeStringProp, makeNumberProp, makeNumericProp, createNamespace } from \"../utils/index.mjs\";\r\nimport { useRect, useCustomFieldValue, useEventListener } from \"@vant/use\";\r\nimport { useRefs } from \"../composables/use-refs.mjs\";\r\nimport { useTouch } from \"../composables/use-touch.mjs\";\r\nimport { Icon } from \"../icon/index.mjs\";\r\nconst [name, bem] = createNamespace(\"rate\");\r\nfunction getRateStatus(value, index, allowHalf, readonly) {\r\n  if (value >= index) {\r\n    return {\r\n      status: \"full\",\r\n      value: 1\r\n    };\r\n  }\r\n  if (value + 0.5 >= index && allowHalf && !readonly) {\r\n    return {\r\n      status: \"half\",\r\n      value: 0.5\r\n    };\r\n  }\r\n  if (value + 1 >= index && allowHalf && readonly) {\r\n    const cardinal = 10 ** 10;\r\n    return {\r\n      status: \"half\",\r\n      value: Math.round((value - index + 1) * cardinal) / cardinal\r\n    };\r\n  }\r\n  return {\r\n    status: \"void\",\r\n    value: 0\r\n  };\r\n}\r\nconst rateProps = {\r\n  size: numericProp,\r\n  icon: makeStringProp(\"star\"),\r\n  color: String,\r\n  count: makeNumericProp(5),\r\n  gutter: numericProp,\r\n  readonly: Boolean,\r\n  disabled: Boolean,\r\n  voidIcon: makeStringProp(\"star-o\"),\r\n  allowHalf: Boolean,\r\n  voidColor: String,\r\n  touchable: truthProp,\r\n  iconPrefix: String,\r\n  modelValue: makeNumberProp(0),\r\n  disabledColor: String\r\n};\r\nvar stdin_default = defineComponent({\r\n  name,\r\n  props: rateProps,\r\n  emits: [\"change\", \"update:modelValue\"],\r\n  setup(props, {\r\n    emit\r\n  }) {\r\n    const touch = useTouch();\r\n    const [itemRefs, setItemRefs] = useRefs();\r\n    const groupRef = ref();\r\n    const untouchable = () => props.readonly || props.disabled || !props.touchable;\r\n    const list = computed(() => Array(+props.count).fill(\"\").map((_, i) => getRateStatus(props.modelValue, i + 1, props.allowHalf, props.readonly)));\r\n    let ranges;\r\n    let groupRefRect;\r\n    let minRectTop = Number.MAX_SAFE_INTEGER;\r\n    let maxRectTop = Number.MIN_SAFE_INTEGER;\r\n    const updateRanges = () => {\r\n      groupRefRect = useRect(groupRef);\r\n      const rects = itemRefs.value.map(useRect);\r\n      ranges = [];\r\n      rects.forEach((rect, index) => {\r\n        minRectTop = Math.min(rect.top, minRectTop);\r\n        maxRectTop = Math.max(rect.top, maxRectTop);\r\n        if (props.allowHalf) {\r\n          ranges.push({\r\n            score: index + 0.5,\r\n            left: rect.left,\r\n            top: rect.top,\r\n            height: rect.height\r\n          }, {\r\n            score: index + 1,\r\n            left: rect.left + rect.width / 2,\r\n            top: rect.top,\r\n            height: rect.height\r\n          });\r\n        } else {\r\n          ranges.push({\r\n            score: index + 1,\r\n            left: rect.left,\r\n            top: rect.top,\r\n            height: rect.height\r\n          });\r\n        }\r\n      });\r\n    };\r\n    const getScoreByPosition = (x, y) => {\r\n      for (let i = ranges.length - 1; i > 0; i--) {\r\n        if (y >= groupRefRect.top && y <= groupRefRect.bottom) {\r\n          if (x > ranges[i].left && y >= ranges[i].top && y <= ranges[i].top + ranges[i].height) {\r\n            return ranges[i].score;\r\n          }\r\n        } else {\r\n          const curTop = y < groupRefRect.top ? minRectTop : maxRectTop;\r\n          if (x > ranges[i].left && ranges[i].top === curTop) {\r\n            return ranges[i].score;\r\n          }\r\n        }\r\n      }\r\n      return props.allowHalf ? 0.5 : 1;\r\n    };\r\n    const select = (index) => {\r\n      if (!props.disabled && !props.readonly && index !== props.modelValue) {\r\n        emit(\"update:modelValue\", index);\r\n        emit(\"change\", index);\r\n      }\r\n    };\r\n    const onTouchStart = (event) => {\r\n      if (untouchable()) {\r\n        return;\r\n      }\r\n      touch.start(event);\r\n      updateRanges();\r\n    };\r\n    const onTouchMove = (event) => {\r\n      if (untouchable()) {\r\n        return;\r\n      }\r\n      touch.move(event);\r\n      if (touch.isHorizontal()) {\r\n        const {\r\n          clientX,\r\n          clientY\r\n        } = event.touches[0];\r\n        preventDefault(event);\r\n        select(getScoreByPosition(clientX, clientY));\r\n      }\r\n    };\r\n    const renderStar = (item, index) => {\r\n      const {\r\n        icon,\r\n        size,\r\n        color,\r\n        count,\r\n        gutter,\r\n        voidIcon,\r\n        disabled,\r\n        voidColor,\r\n        allowHalf,\r\n        iconPrefix,\r\n        disabledColor\r\n      } = props;\r\n      const score = index + 1;\r\n      const isFull = item.status === \"full\";\r\n      const isVoid = item.status === \"void\";\r\n      const renderHalf = allowHalf && item.value > 0 && item.value < 1;\r\n      let style;\r\n      if (gutter && score !== +count) {\r\n        style = {\r\n          paddingRight: addUnit(gutter)\r\n        };\r\n      }\r\n      const onClickItem = (event) => {\r\n        updateRanges();\r\n        select(allowHalf ? getScoreByPosition(event.clientX, event.clientY) : score);\r\n      };\r\n      return _createVNode(\"div\", {\r\n        \"key\": index,\r\n        \"ref\": setItemRefs(index),\r\n        \"role\": \"radio\",\r\n        \"style\": style,\r\n        \"class\": bem(\"item\"),\r\n        \"tabindex\": disabled ? void 0 : 0,\r\n        \"aria-setsize\": count,\r\n        \"aria-posinset\": score,\r\n        \"aria-checked\": !isVoid,\r\n        \"onClick\": onClickItem\r\n      }, [_createVNode(Icon, {\r\n        \"size\": size,\r\n        \"name\": isFull ? icon : voidIcon,\r\n        \"class\": bem(\"icon\", {\r\n          disabled,\r\n          full: isFull\r\n        }),\r\n        \"color\": disabled ? disabledColor : isFull ? color : voidColor,\r\n        \"classPrefix\": iconPrefix\r\n      }, null), renderHalf && _createVNode(Icon, {\r\n        \"size\": size,\r\n        \"style\": {\r\n          width: item.value + \"em\"\r\n        },\r\n        \"name\": isVoid ? voidIcon : icon,\r\n        \"class\": bem(\"icon\", [\"half\", {\r\n          disabled,\r\n          full: !isVoid\r\n        }]),\r\n        \"color\": disabled ? disabledColor : isVoid ? voidColor : color,\r\n        \"classPrefix\": iconPrefix\r\n      }, null)]);\r\n    };\r\n    useCustomFieldValue(() => props.modelValue);\r\n    useEventListener(\"touchmove\", onTouchMove, {\r\n      target: groupRef\r\n    });\r\n    return () => _createVNode(\"div\", {\r\n      \"ref\": groupRef,\r\n      \"role\": \"radiogroup\",\r\n      \"class\": bem({\r\n        readonly: props.readonly,\r\n        disabled: props.disabled\r\n      }),\r\n      \"tabindex\": props.disabled ? void 0 : 0,\r\n      \"aria-disabled\": props.disabled,\r\n      \"aria-readonly\": props.readonly,\r\n      \"onTouchstartPassive\": onTouchStart\r\n    }, [list.value.map(renderStar)]);\r\n  }\r\n});\r\nexport {\r\n  stdin_default as default,\r\n  rateProps\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}