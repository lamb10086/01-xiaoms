{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\";\nimport { defineComponent } from \"vue\";\nimport { truthProp, createNamespace, BORDER_TOP_BOTTOM } from \"../utils/index.mjs\";\nimport { useChildren } from \"@vant/use\";\nimport { useExpose } from \"../composables/use-expose.mjs\";\nconst [name, bem] = createNamespace(\"collapse\");\nconst COLLAPSE_KEY = Symbol(name);\nconst collapseProps = {\n  border: truthProp,\n  accordion: Boolean,\n  modelValue: {\n    type: [String, Number, Array],\n    default: \"\"\n  }\n};\nfunction validateModelValue(modelValue, accordion) {\n  if (accordion && Array.isArray(modelValue)) {\n    console.error('[Vant] Collapse: \"v-model\" should not be Array in accordion mode');\n    return false;\n  }\n  if (!accordion && !Array.isArray(modelValue)) {\n    console.error('[Vant] Collapse: \"v-model\" should be Array in non-accordion mode');\n    return false;\n  }\n  return true;\n}\nvar stdin_default = defineComponent({\n  name,\n  props: collapseProps,\n  emits: [\"change\", \"update:modelValue\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const {\n      linkChildren,\n      children\n    } = useChildren(COLLAPSE_KEY);\n    const updateName = name2 => {\n      emit(\"change\", name2);\n      emit(\"update:modelValue\", name2);\n    };\n    const toggle = (name2, expanded) => {\n      const {\n        accordion,\n        modelValue\n      } = props;\n      if (accordion) {\n        updateName(name2 === modelValue ? \"\" : name2);\n      } else if (expanded) {\n        updateName(modelValue.concat(name2));\n      } else {\n        updateName(modelValue.filter(activeName => activeName !== name2));\n      }\n    };\n    const toggleAll = (options = {}) => {\n      if (props.accordion) {\n        return;\n      }\n      if (typeof options === \"boolean\") {\n        options = {\n          expanded: options\n        };\n      }\n      const {\n        expanded,\n        skipDisabled\n      } = options;\n      const expandedChildren = children.filter(item => {\n        if (item.disabled && skipDisabled) {\n          return item.expanded.value;\n        }\n        return expanded != null ? expanded : !item.expanded.value;\n      });\n      const names = expandedChildren.map(item => item.itemName.value);\n      updateName(names);\n    };\n    const isExpanded = name2 => {\n      const {\n        accordion,\n        modelValue\n      } = props;\n      if (process.env.NODE_ENV !== \"production\" && !validateModelValue(modelValue, accordion)) {\n        return false;\n      }\n      return accordion ? modelValue === name2 : modelValue.includes(name2);\n    };\n    useExpose({\n      toggleAll\n    });\n    linkChildren({\n      toggle,\n      isExpanded\n    });\n    return () => {\n      var _a;\n      return _createVNode(\"div\", {\n        \"class\": [bem(), {\n          [BORDER_TOP_BOTTOM]: props.border\n        }]\n      }, [(_a = slots.default) == null ? void 0 : _a.call(slots)]);\n    };\n  }\n});\nexport { COLLAPSE_KEY, collapseProps, stdin_default as default };","map":{"version":3,"names":["createVNode","_createVNode","defineComponent","truthProp","createNamespace","BORDER_TOP_BOTTOM","useChildren","useExpose","name","bem","COLLAPSE_KEY","Symbol","collapseProps","border","accordion","Boolean","modelValue","type","String","Number","Array","default","validateModelValue","isArray","console","error","stdin_default","props","emits","setup","emit","slots","linkChildren","children","updateName","name2","toggle","expanded","concat","filter","activeName","toggleAll","options","skipDisabled","expandedChildren","item","disabled","value","names","map","itemName","isExpanded","process","env","NODE_ENV","includes","_a","call"],"sources":["C:/Users/yangp/Desktop/01-xiaoms/node_modules/vant/es/collapse/Collapse.mjs"],"sourcesContent":["import { createVNode as _createVNode } from \"vue\";\r\nimport { defineComponent } from \"vue\";\r\nimport { truthProp, createNamespace, BORDER_TOP_BOTTOM } from \"../utils/index.mjs\";\r\nimport { useChildren } from \"@vant/use\";\r\nimport { useExpose } from \"../composables/use-expose.mjs\";\r\nconst [name, bem] = createNamespace(\"collapse\");\r\nconst COLLAPSE_KEY = Symbol(name);\r\nconst collapseProps = {\r\n  border: truthProp,\r\n  accordion: Boolean,\r\n  modelValue: {\r\n    type: [String, Number, Array],\r\n    default: \"\"\r\n  }\r\n};\r\nfunction validateModelValue(modelValue, accordion) {\r\n  if (accordion && Array.isArray(modelValue)) {\r\n    console.error('[Vant] Collapse: \"v-model\" should not be Array in accordion mode');\r\n    return false;\r\n  }\r\n  if (!accordion && !Array.isArray(modelValue)) {\r\n    console.error('[Vant] Collapse: \"v-model\" should be Array in non-accordion mode');\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\nvar stdin_default = defineComponent({\r\n  name,\r\n  props: collapseProps,\r\n  emits: [\"change\", \"update:modelValue\"],\r\n  setup(props, {\r\n    emit,\r\n    slots\r\n  }) {\r\n    const {\r\n      linkChildren,\r\n      children\r\n    } = useChildren(COLLAPSE_KEY);\r\n    const updateName = (name2) => {\r\n      emit(\"change\", name2);\r\n      emit(\"update:modelValue\", name2);\r\n    };\r\n    const toggle = (name2, expanded) => {\r\n      const {\r\n        accordion,\r\n        modelValue\r\n      } = props;\r\n      if (accordion) {\r\n        updateName(name2 === modelValue ? \"\" : name2);\r\n      } else if (expanded) {\r\n        updateName(modelValue.concat(name2));\r\n      } else {\r\n        updateName(modelValue.filter((activeName) => activeName !== name2));\r\n      }\r\n    };\r\n    const toggleAll = (options = {}) => {\r\n      if (props.accordion) {\r\n        return;\r\n      }\r\n      if (typeof options === \"boolean\") {\r\n        options = {\r\n          expanded: options\r\n        };\r\n      }\r\n      const {\r\n        expanded,\r\n        skipDisabled\r\n      } = options;\r\n      const expandedChildren = children.filter((item) => {\r\n        if (item.disabled && skipDisabled) {\r\n          return item.expanded.value;\r\n        }\r\n        return expanded != null ? expanded : !item.expanded.value;\r\n      });\r\n      const names = expandedChildren.map((item) => item.itemName.value);\r\n      updateName(names);\r\n    };\r\n    const isExpanded = (name2) => {\r\n      const {\r\n        accordion,\r\n        modelValue\r\n      } = props;\r\n      if (process.env.NODE_ENV !== \"production\" && !validateModelValue(modelValue, accordion)) {\r\n        return false;\r\n      }\r\n      return accordion ? modelValue === name2 : modelValue.includes(name2);\r\n    };\r\n    useExpose({\r\n      toggleAll\r\n    });\r\n    linkChildren({\r\n      toggle,\r\n      isExpanded\r\n    });\r\n    return () => {\r\n      var _a;\r\n      return _createVNode(\"div\", {\r\n        \"class\": [bem(), {\r\n          [BORDER_TOP_BOTTOM]: props.border\r\n        }]\r\n      }, [(_a = slots.default) == null ? void 0 : _a.call(slots)]);\r\n    };\r\n  }\r\n});\r\nexport {\r\n  COLLAPSE_KEY,\r\n  collapseProps,\r\n  stdin_default as default\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}