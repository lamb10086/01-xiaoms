{"ast":null,"code":"import { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\nimport { ref, watch, computed, defineComponent } from \"vue\";\nimport { pick, extend, isDate, isSameValue, createNamespace } from \"../utils/index.mjs\";\nimport { genOptions, sharedProps, getMonthEndDay, pickerInheritKeys, formatValueRange } from \"./utils.mjs\";\nimport { Picker } from \"../picker/index.mjs\";\nconst currentYear = new Date().getFullYear();\nconst [name] = createNamespace(\"date-picker\");\nconst datePickerProps = extend({}, sharedProps, {\n  columnsType: {\n    type: Array,\n    default: () => [\"year\", \"month\", \"day\"]\n  },\n  minDate: {\n    type: Date,\n    default: () => new Date(currentYear - 10, 0, 1),\n    validator: isDate\n  },\n  maxDate: {\n    type: Date,\n    default: () => new Date(currentYear + 10, 11, 31),\n    validator: isDate\n  }\n});\nvar stdin_default = defineComponent({\n  name,\n  props: datePickerProps,\n  emits: [\"confirm\", \"cancel\", \"change\", \"update:modelValue\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const currentValues = ref(props.modelValue);\n    const genYearOptions = () => {\n      const minYear = props.minDate.getFullYear();\n      const maxYear = props.maxDate.getFullYear();\n      return genOptions(minYear, maxYear, \"year\", props.formatter, props.filter);\n    };\n    const isMinYear = year => year === props.minDate.getFullYear();\n    const isMaxYear = year => year === props.maxDate.getFullYear();\n    const isMinMonth = month => month === props.minDate.getMonth() + 1;\n    const isMaxMonth = month => month === props.maxDate.getMonth() + 1;\n    const getValue = type => {\n      const {\n        minDate,\n        columnsType\n      } = props;\n      const index = columnsType.indexOf(type);\n      const value = currentValues.value[index];\n      if (value) {\n        return +value;\n      }\n      switch (type) {\n        case \"year\":\n          return minDate.getFullYear();\n        case \"month\":\n          return minDate.getMonth() + 1;\n        case \"day\":\n          return minDate.getDate();\n      }\n    };\n    const genMonthOptions = () => {\n      const year = getValue(\"year\");\n      const minMonth = isMinYear(year) ? props.minDate.getMonth() + 1 : 1;\n      const maxMonth = isMaxYear(year) ? props.maxDate.getMonth() + 1 : 12;\n      return genOptions(minMonth, maxMonth, \"month\", props.formatter, props.filter);\n    };\n    const genDayOptions = () => {\n      const year = getValue(\"year\");\n      const month = getValue(\"month\");\n      const minDate = isMinYear(year) && isMinMonth(month) ? props.minDate.getDate() : 1;\n      const maxDate = isMaxYear(year) && isMaxMonth(month) ? props.maxDate.getDate() : getMonthEndDay(year, month);\n      return genOptions(minDate, maxDate, \"day\", props.formatter, props.filter);\n    };\n    const columns = computed(() => props.columnsType.map(type => {\n      switch (type) {\n        case \"year\":\n          return genYearOptions();\n        case \"month\":\n          return genMonthOptions();\n        case \"day\":\n          return genDayOptions();\n        default:\n          if (process.env.NODE_ENV !== \"production\") {\n            throw new Error(`[Vant] DatePicker: unsupported columns type: ${type}`);\n          }\n          return [];\n      }\n    }));\n    watch(currentValues, newValues => {\n      if (!isSameValue(newValues, props.modelValue)) {\n        emit(\"update:modelValue\", newValues);\n      }\n    });\n    watch(() => props.modelValue, newValues => {\n      newValues = formatValueRange(newValues, columns.value);\n      if (!isSameValue(newValues, currentValues.value)) {\n        currentValues.value = newValues;\n      }\n    }, {\n      immediate: true\n    });\n    const onChange = (...args) => emit(\"change\", ...args);\n    const onCancel = (...args) => emit(\"cancel\", ...args);\n    const onConfirm = (...args) => emit(\"confirm\", ...args);\n    return () => _createVNode(Picker, _mergeProps({\n      \"modelValue\": currentValues.value,\n      \"onUpdate:modelValue\": $event => currentValues.value = $event,\n      \"columns\": columns.value,\n      \"onChange\": onChange,\n      \"onCancel\": onCancel,\n      \"onConfirm\": onConfirm\n    }, pick(props, pickerInheritKeys)), slots);\n  }\n});\nexport { datePickerProps, stdin_default as default };","map":{"version":3,"names":["createVNode","_createVNode","mergeProps","_mergeProps","ref","watch","computed","defineComponent","pick","extend","isDate","isSameValue","createNamespace","genOptions","sharedProps","getMonthEndDay","pickerInheritKeys","formatValueRange","Picker","currentYear","Date","getFullYear","name","datePickerProps","columnsType","type","Array","default","minDate","validator","maxDate","stdin_default","props","emits","setup","emit","slots","currentValues","modelValue","genYearOptions","minYear","maxYear","formatter","filter","isMinYear","year","isMaxYear","isMinMonth","month","getMonth","isMaxMonth","getValue","index","indexOf","value","getDate","genMonthOptions","minMonth","maxMonth","genDayOptions","columns","map","process","env","NODE_ENV","Error","newValues","immediate","onChange","args","onCancel","onConfirm","$event"],"sources":["C:/Users/yangp/Desktop/01-xiaoms/node_modules/vant/es/date-picker/DatePicker.mjs"],"sourcesContent":["import { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\r\nimport { ref, watch, computed, defineComponent } from \"vue\";\r\nimport { pick, extend, isDate, isSameValue, createNamespace } from \"../utils/index.mjs\";\r\nimport { genOptions, sharedProps, getMonthEndDay, pickerInheritKeys, formatValueRange } from \"./utils.mjs\";\r\nimport { Picker } from \"../picker/index.mjs\";\r\nconst currentYear = new Date().getFullYear();\r\nconst [name] = createNamespace(\"date-picker\");\r\nconst datePickerProps = extend({}, sharedProps, {\r\n  columnsType: {\r\n    type: Array,\r\n    default: () => [\"year\", \"month\", \"day\"]\r\n  },\r\n  minDate: {\r\n    type: Date,\r\n    default: () => new Date(currentYear - 10, 0, 1),\r\n    validator: isDate\r\n  },\r\n  maxDate: {\r\n    type: Date,\r\n    default: () => new Date(currentYear + 10, 11, 31),\r\n    validator: isDate\r\n  }\r\n});\r\nvar stdin_default = defineComponent({\r\n  name,\r\n  props: datePickerProps,\r\n  emits: [\"confirm\", \"cancel\", \"change\", \"update:modelValue\"],\r\n  setup(props, {\r\n    emit,\r\n    slots\r\n  }) {\r\n    const currentValues = ref(props.modelValue);\r\n    const genYearOptions = () => {\r\n      const minYear = props.minDate.getFullYear();\r\n      const maxYear = props.maxDate.getFullYear();\r\n      return genOptions(minYear, maxYear, \"year\", props.formatter, props.filter);\r\n    };\r\n    const isMinYear = (year) => year === props.minDate.getFullYear();\r\n    const isMaxYear = (year) => year === props.maxDate.getFullYear();\r\n    const isMinMonth = (month) => month === props.minDate.getMonth() + 1;\r\n    const isMaxMonth = (month) => month === props.maxDate.getMonth() + 1;\r\n    const getValue = (type) => {\r\n      const {\r\n        minDate,\r\n        columnsType\r\n      } = props;\r\n      const index = columnsType.indexOf(type);\r\n      const value = currentValues.value[index];\r\n      if (value) {\r\n        return +value;\r\n      }\r\n      switch (type) {\r\n        case \"year\":\r\n          return minDate.getFullYear();\r\n        case \"month\":\r\n          return minDate.getMonth() + 1;\r\n        case \"day\":\r\n          return minDate.getDate();\r\n      }\r\n    };\r\n    const genMonthOptions = () => {\r\n      const year = getValue(\"year\");\r\n      const minMonth = isMinYear(year) ? props.minDate.getMonth() + 1 : 1;\r\n      const maxMonth = isMaxYear(year) ? props.maxDate.getMonth() + 1 : 12;\r\n      return genOptions(minMonth, maxMonth, \"month\", props.formatter, props.filter);\r\n    };\r\n    const genDayOptions = () => {\r\n      const year = getValue(\"year\");\r\n      const month = getValue(\"month\");\r\n      const minDate = isMinYear(year) && isMinMonth(month) ? props.minDate.getDate() : 1;\r\n      const maxDate = isMaxYear(year) && isMaxMonth(month) ? props.maxDate.getDate() : getMonthEndDay(year, month);\r\n      return genOptions(minDate, maxDate, \"day\", props.formatter, props.filter);\r\n    };\r\n    const columns = computed(() => props.columnsType.map((type) => {\r\n      switch (type) {\r\n        case \"year\":\r\n          return genYearOptions();\r\n        case \"month\":\r\n          return genMonthOptions();\r\n        case \"day\":\r\n          return genDayOptions();\r\n        default:\r\n          if (process.env.NODE_ENV !== \"production\") {\r\n            throw new Error(`[Vant] DatePicker: unsupported columns type: ${type}`);\r\n          }\r\n          return [];\r\n      }\r\n    }));\r\n    watch(currentValues, (newValues) => {\r\n      if (!isSameValue(newValues, props.modelValue)) {\r\n        emit(\"update:modelValue\", newValues);\r\n      }\r\n    });\r\n    watch(() => props.modelValue, (newValues) => {\r\n      newValues = formatValueRange(newValues, columns.value);\r\n      if (!isSameValue(newValues, currentValues.value)) {\r\n        currentValues.value = newValues;\r\n      }\r\n    }, {\r\n      immediate: true\r\n    });\r\n    const onChange = (...args) => emit(\"change\", ...args);\r\n    const onCancel = (...args) => emit(\"cancel\", ...args);\r\n    const onConfirm = (...args) => emit(\"confirm\", ...args);\r\n    return () => _createVNode(Picker, _mergeProps({\r\n      \"modelValue\": currentValues.value,\r\n      \"onUpdate:modelValue\": ($event) => currentValues.value = $event,\r\n      \"columns\": columns.value,\r\n      \"onChange\": onChange,\r\n      \"onCancel\": onCancel,\r\n      \"onConfirm\": onConfirm\r\n    }, pick(props, pickerInheritKeys)), slots);\r\n  }\r\n});\r\nexport {\r\n  datePickerProps,\r\n  stdin_default as default\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}