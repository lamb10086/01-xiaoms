{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = appendToMemberExpression;\nvar _generated = require(\"../builders/generated\");\nfunction appendToMemberExpression(member, append, computed = false) {\n  member.object = (0, _generated.memberExpression)(member.object, member.property, member.computed);\n  member.property = append;\n  member.computed = !!computed;\n  return member;\n}","map":{"version":3,"mappings":";;;;;;AAAA;AAMe,SAASA,wBAAT,CACbC,MADa,EAEbC,MAFa,EAGbC,QAAiB,GAAG,KAHP,EAIO;EACpBF,MAAM,CAACG,MAAP,GAAgB,iCACdH,MAAM,CAACG,MADO,EAEdH,MAAM,CAACI,QAFO,EAGdJ,MAAM,CAACE,QAHO,CAAhB;EAKAF,MAAM,CAACI,QAAP,GAAkBH,MAAlB;EACAD,MAAM,CAACE,QAAP,GAAkB,CAAC,CAACA,QAApB;EAEA,OAAOF,MAAP;AACD","names":["appendToMemberExpression","member","append","computed","object","property"],"sources":["../../src/modifications/appendToMemberExpression.ts"],"sourcesContent":["import { memberExpression } from \"../builders/generated\";\nimport type * as t from \"..\";\n\n/**\n * Append a node to a member expression.\n */\nexport default function appendToMemberExpression(\n  member: t.MemberExpression,\n  append: t.MemberExpression[\"property\"],\n  computed: boolean = false,\n): t.MemberExpression {\n  member.object = memberExpression(\n    member.object,\n    member.property,\n    member.computed,\n  );\n  member.property = append;\n  member.computed = !!computed;\n\n  return member;\n}\n"]},"metadata":{},"sourceType":"module"}