{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isVar;\nvar _generated = require(\"./generated\");\nvar _constants = require(\"../constants\");\nfunction isVar(node) {\n  return (0, _generated.isVariableDeclaration)(node, {\n    kind: \"var\"\n  }) && !node[_constants.BLOCK_SCOPED_SYMBOL];\n}","map":{"version":3,"mappings":";;;;;;AAAA;AACA;AAMe,SAASA,KAAT,CAAeC,IAAf,EAAsC;EACnD,OACE,sCAAsBA,IAAtB,EAA4B;IAAEC,IAAI,EAAE;EAAR,CAA5B,KACA,CAEED,IAAI,CAACE,8BAAD,CAJR;AAOD","names":["isVar","node","kind","BLOCK_SCOPED_SYMBOL"],"sources":["../../src/validators/isVar.ts"],"sourcesContent":["import { isVariableDeclaration } from \"./generated\";\nimport { BLOCK_SCOPED_SYMBOL } from \"../constants\";\nimport type * as t from \"..\";\n\n/**\n * Check if the input `node` is a variable declaration.\n */\nexport default function isVar(node: t.Node): boolean {\n  return (\n    isVariableDeclaration(node, { kind: \"var\" }) &&\n    !(\n      // @ts-expect-error document private properties\n      node[BLOCK_SCOPED_SYMBOL]\n    )\n  );\n}\n"]},"metadata":{},"sourceType":"module"}