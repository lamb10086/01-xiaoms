{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\";\nimport { ref, watch, computed, reactive, defineComponent } from \"vue\";\nimport { clamp, numericProp, preventDefault, createNamespace, makeRequiredProp, LONG_PRESS_START_TIME } from \"../utils/index.mjs\";\nimport { useTouch } from \"../composables/use-touch.mjs\";\nimport { useEventListener } from \"@vant/use\";\nimport { Image } from \"../image/index.mjs\";\nimport { Loading } from \"../loading/index.mjs\";\nimport { SwipeItem } from \"../swipe-item/index.mjs\";\nconst getDistance = touches => Math.sqrt((touches[0].clientX - touches[1].clientX) ** 2 + (touches[0].clientY - touches[1].clientY) ** 2);\nconst bem = createNamespace(\"image-preview\")[1];\nvar stdin_default = defineComponent({\n  props: {\n    src: String,\n    show: Boolean,\n    active: Number,\n    minZoom: makeRequiredProp(numericProp),\n    maxZoom: makeRequiredProp(numericProp),\n    rootWidth: makeRequiredProp(Number),\n    rootHeight: makeRequiredProp(Number)\n  },\n  emits: [\"scale\", \"close\", \"longPress\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const state = reactive({\n      scale: 1,\n      moveX: 0,\n      moveY: 0,\n      moving: false,\n      zooming: false,\n      imageRatio: 0,\n      displayWidth: 0,\n      displayHeight: 0\n    });\n    const touch = useTouch();\n    const swipeItem = ref();\n    const vertical = computed(() => {\n      const {\n        rootWidth,\n        rootHeight\n      } = props;\n      const rootRatio = rootHeight / rootWidth;\n      return state.imageRatio > rootRatio;\n    });\n    const imageStyle = computed(() => {\n      const {\n        scale,\n        moveX,\n        moveY,\n        moving,\n        zooming\n      } = state;\n      const style = {\n        transitionDuration: zooming || moving ? \"0s\" : \".3s\"\n      };\n      if (scale !== 1) {\n        const offsetX = moveX / scale;\n        const offsetY = moveY / scale;\n        style.transform = `scale(${scale}, ${scale}) translate(${offsetX}px, ${offsetY}px)`;\n      }\n      return style;\n    });\n    const maxMoveX = computed(() => {\n      if (state.imageRatio) {\n        const {\n          rootWidth,\n          rootHeight\n        } = props;\n        const displayWidth = vertical.value ? rootHeight / state.imageRatio : rootWidth;\n        return Math.max(0, (state.scale * displayWidth - rootWidth) / 2);\n      }\n      return 0;\n    });\n    const maxMoveY = computed(() => {\n      if (state.imageRatio) {\n        const {\n          rootWidth,\n          rootHeight\n        } = props;\n        const displayHeight = vertical.value ? rootHeight : rootWidth * state.imageRatio;\n        return Math.max(0, (state.scale * displayHeight - rootHeight) / 2);\n      }\n      return 0;\n    });\n    const setScale = scale => {\n      scale = clamp(scale, +props.minZoom, +props.maxZoom + 1);\n      if (scale !== state.scale) {\n        state.scale = scale;\n        emit(\"scale\", {\n          scale,\n          index: props.active\n        });\n      }\n    };\n    const resetScale = () => {\n      setScale(1);\n      state.moveX = 0;\n      state.moveY = 0;\n    };\n    const toggleScale = () => {\n      const scale = state.scale > 1 ? 1 : 2;\n      setScale(scale);\n      state.moveX = 0;\n      state.moveY = 0;\n    };\n    let fingerNum;\n    let startMoveX;\n    let startMoveY;\n    let startScale;\n    let startDistance;\n    let doubleTapTimer;\n    let touchStartTime;\n    const onTouchStart = event => {\n      const {\n        touches\n      } = event;\n      const {\n        offsetX\n      } = touch;\n      touch.start(event);\n      fingerNum = touches.length;\n      startMoveX = state.moveX;\n      startMoveY = state.moveY;\n      touchStartTime = Date.now();\n      state.moving = fingerNum === 1 && state.scale !== 1;\n      state.zooming = fingerNum === 2 && !offsetX.value;\n      if (state.zooming) {\n        startScale = state.scale;\n        startDistance = getDistance(event.touches);\n      }\n    };\n    const onTouchMove = event => {\n      const {\n        touches\n      } = event;\n      touch.move(event);\n      if (state.moving || state.zooming) {\n        preventDefault(event, true);\n      }\n      if (state.moving) {\n        const {\n          deltaX,\n          deltaY\n        } = touch;\n        const moveX = deltaX.value + startMoveX;\n        const moveY = deltaY.value + startMoveY;\n        state.moveX = clamp(moveX, -maxMoveX.value, maxMoveX.value);\n        state.moveY = clamp(moveY, -maxMoveY.value, maxMoveY.value);\n      }\n      if (state.zooming && touches.length === 2) {\n        const distance = getDistance(touches);\n        const scale = startScale * distance / startDistance;\n        setScale(scale);\n      }\n    };\n    const checkTap = () => {\n      if (fingerNum > 1) {\n        return;\n      }\n      const {\n        offsetX,\n        offsetY\n      } = touch;\n      const deltaTime = Date.now() - touchStartTime;\n      const TAP_TIME = 250;\n      const TAP_OFFSET = 5;\n      if (offsetX.value < TAP_OFFSET && offsetY.value < TAP_OFFSET) {\n        if (deltaTime < TAP_TIME) {\n          if (doubleTapTimer) {\n            clearTimeout(doubleTapTimer);\n            doubleTapTimer = null;\n            toggleScale();\n          } else {\n            doubleTapTimer = setTimeout(() => {\n              emit(\"close\");\n              doubleTapTimer = null;\n            }, TAP_TIME);\n          }\n        } else if (deltaTime > LONG_PRESS_START_TIME) {\n          emit(\"longPress\");\n        }\n      }\n    };\n    const onTouchEnd = event => {\n      let stopPropagation = false;\n      if (state.moving || state.zooming) {\n        stopPropagation = true;\n        if (state.moving && startMoveX === state.moveX && startMoveY === state.moveY) {\n          stopPropagation = false;\n        }\n        if (!event.touches.length) {\n          if (state.zooming) {\n            state.moveX = clamp(state.moveX, -maxMoveX.value, maxMoveX.value);\n            state.moveY = clamp(state.moveY, -maxMoveY.value, maxMoveY.value);\n            state.zooming = false;\n          }\n          state.moving = false;\n          startMoveX = 0;\n          startMoveY = 0;\n          startScale = 1;\n          if (state.scale < 1) {\n            resetScale();\n          }\n          if (state.scale > props.maxZoom) {\n            state.scale = +props.maxZoom;\n          }\n        }\n      }\n      preventDefault(event, stopPropagation);\n      checkTap();\n      touch.reset();\n    };\n    const onLoad = event => {\n      const {\n        naturalWidth,\n        naturalHeight\n      } = event.target;\n      state.imageRatio = naturalHeight / naturalWidth;\n    };\n    watch(() => props.active, resetScale);\n    watch(() => props.show, value => {\n      if (!value) {\n        resetScale();\n      }\n    });\n    useEventListener(\"touchmove\", onTouchMove, {\n      target: computed(() => {\n        var _a;\n        return (_a = swipeItem.value) == null ? void 0 : _a.$el;\n      })\n    });\n    return () => {\n      const imageSlots = {\n        loading: () => _createVNode(Loading, {\n          \"type\": \"spinner\"\n        }, null)\n      };\n      return _createVNode(SwipeItem, {\n        \"ref\": swipeItem,\n        \"class\": bem(\"swipe-item\"),\n        \"onTouchstartPassive\": onTouchStart,\n        \"onTouchend\": onTouchEnd,\n        \"onTouchcancel\": onTouchEnd\n      }, {\n        default: () => [slots.image ? _createVNode(\"div\", {\n          \"class\": bem(\"image-wrap\")\n        }, [slots.image({\n          src: props.src\n        })]) : _createVNode(Image, {\n          \"src\": props.src,\n          \"fit\": \"contain\",\n          \"class\": bem(\"image\", {\n            vertical: vertical.value\n          }),\n          \"style\": imageStyle.value,\n          \"onLoad\": onLoad\n        }, imageSlots)]\n      });\n    };\n  }\n});\nexport { stdin_default as default };","map":{"version":3,"names":["createVNode","_createVNode","ref","watch","computed","reactive","defineComponent","clamp","numericProp","preventDefault","createNamespace","makeRequiredProp","LONG_PRESS_START_TIME","useTouch","useEventListener","Image","Loading","SwipeItem","getDistance","touches","Math","sqrt","clientX","clientY","bem","stdin_default","props","src","String","show","Boolean","active","Number","minZoom","maxZoom","rootWidth","rootHeight","emits","setup","emit","slots","state","scale","moveX","moveY","moving","zooming","imageRatio","displayWidth","displayHeight","touch","swipeItem","vertical","rootRatio","imageStyle","style","transitionDuration","offsetX","offsetY","transform","maxMoveX","value","max","maxMoveY","setScale","index","resetScale","toggleScale","fingerNum","startMoveX","startMoveY","startScale","startDistance","doubleTapTimer","touchStartTime","onTouchStart","event","start","length","Date","now","onTouchMove","move","deltaX","deltaY","distance","checkTap","deltaTime","TAP_TIME","TAP_OFFSET","clearTimeout","setTimeout","onTouchEnd","stopPropagation","reset","onLoad","naturalWidth","naturalHeight","target","_a","$el","imageSlots","loading","default","image"],"sources":["C:/Users/yangp/Desktop/01-xiaoms/node_modules/vant/es/image-preview/ImagePreviewItem.mjs"],"sourcesContent":["import { createVNode as _createVNode } from \"vue\";\r\nimport { ref, watch, computed, reactive, defineComponent } from \"vue\";\r\nimport { clamp, numericProp, preventDefault, createNamespace, makeRequiredProp, LONG_PRESS_START_TIME } from \"../utils/index.mjs\";\r\nimport { useTouch } from \"../composables/use-touch.mjs\";\r\nimport { useEventListener } from \"@vant/use\";\r\nimport { Image } from \"../image/index.mjs\";\r\nimport { Loading } from \"../loading/index.mjs\";\r\nimport { SwipeItem } from \"../swipe-item/index.mjs\";\r\nconst getDistance = (touches) => Math.sqrt((touches[0].clientX - touches[1].clientX) ** 2 + (touches[0].clientY - touches[1].clientY) ** 2);\r\nconst bem = createNamespace(\"image-preview\")[1];\r\nvar stdin_default = defineComponent({\r\n  props: {\r\n    src: String,\r\n    show: Boolean,\r\n    active: Number,\r\n    minZoom: makeRequiredProp(numericProp),\r\n    maxZoom: makeRequiredProp(numericProp),\r\n    rootWidth: makeRequiredProp(Number),\r\n    rootHeight: makeRequiredProp(Number)\r\n  },\r\n  emits: [\"scale\", \"close\", \"longPress\"],\r\n  setup(props, {\r\n    emit,\r\n    slots\r\n  }) {\r\n    const state = reactive({\r\n      scale: 1,\r\n      moveX: 0,\r\n      moveY: 0,\r\n      moving: false,\r\n      zooming: false,\r\n      imageRatio: 0,\r\n      displayWidth: 0,\r\n      displayHeight: 0\r\n    });\r\n    const touch = useTouch();\r\n    const swipeItem = ref();\r\n    const vertical = computed(() => {\r\n      const {\r\n        rootWidth,\r\n        rootHeight\r\n      } = props;\r\n      const rootRatio = rootHeight / rootWidth;\r\n      return state.imageRatio > rootRatio;\r\n    });\r\n    const imageStyle = computed(() => {\r\n      const {\r\n        scale,\r\n        moveX,\r\n        moveY,\r\n        moving,\r\n        zooming\r\n      } = state;\r\n      const style = {\r\n        transitionDuration: zooming || moving ? \"0s\" : \".3s\"\r\n      };\r\n      if (scale !== 1) {\r\n        const offsetX = moveX / scale;\r\n        const offsetY = moveY / scale;\r\n        style.transform = `scale(${scale}, ${scale}) translate(${offsetX}px, ${offsetY}px)`;\r\n      }\r\n      return style;\r\n    });\r\n    const maxMoveX = computed(() => {\r\n      if (state.imageRatio) {\r\n        const {\r\n          rootWidth,\r\n          rootHeight\r\n        } = props;\r\n        const displayWidth = vertical.value ? rootHeight / state.imageRatio : rootWidth;\r\n        return Math.max(0, (state.scale * displayWidth - rootWidth) / 2);\r\n      }\r\n      return 0;\r\n    });\r\n    const maxMoveY = computed(() => {\r\n      if (state.imageRatio) {\r\n        const {\r\n          rootWidth,\r\n          rootHeight\r\n        } = props;\r\n        const displayHeight = vertical.value ? rootHeight : rootWidth * state.imageRatio;\r\n        return Math.max(0, (state.scale * displayHeight - rootHeight) / 2);\r\n      }\r\n      return 0;\r\n    });\r\n    const setScale = (scale) => {\r\n      scale = clamp(scale, +props.minZoom, +props.maxZoom + 1);\r\n      if (scale !== state.scale) {\r\n        state.scale = scale;\r\n        emit(\"scale\", {\r\n          scale,\r\n          index: props.active\r\n        });\r\n      }\r\n    };\r\n    const resetScale = () => {\r\n      setScale(1);\r\n      state.moveX = 0;\r\n      state.moveY = 0;\r\n    };\r\n    const toggleScale = () => {\r\n      const scale = state.scale > 1 ? 1 : 2;\r\n      setScale(scale);\r\n      state.moveX = 0;\r\n      state.moveY = 0;\r\n    };\r\n    let fingerNum;\r\n    let startMoveX;\r\n    let startMoveY;\r\n    let startScale;\r\n    let startDistance;\r\n    let doubleTapTimer;\r\n    let touchStartTime;\r\n    const onTouchStart = (event) => {\r\n      const {\r\n        touches\r\n      } = event;\r\n      const {\r\n        offsetX\r\n      } = touch;\r\n      touch.start(event);\r\n      fingerNum = touches.length;\r\n      startMoveX = state.moveX;\r\n      startMoveY = state.moveY;\r\n      touchStartTime = Date.now();\r\n      state.moving = fingerNum === 1 && state.scale !== 1;\r\n      state.zooming = fingerNum === 2 && !offsetX.value;\r\n      if (state.zooming) {\r\n        startScale = state.scale;\r\n        startDistance = getDistance(event.touches);\r\n      }\r\n    };\r\n    const onTouchMove = (event) => {\r\n      const {\r\n        touches\r\n      } = event;\r\n      touch.move(event);\r\n      if (state.moving || state.zooming) {\r\n        preventDefault(event, true);\r\n      }\r\n      if (state.moving) {\r\n        const {\r\n          deltaX,\r\n          deltaY\r\n        } = touch;\r\n        const moveX = deltaX.value + startMoveX;\r\n        const moveY = deltaY.value + startMoveY;\r\n        state.moveX = clamp(moveX, -maxMoveX.value, maxMoveX.value);\r\n        state.moveY = clamp(moveY, -maxMoveY.value, maxMoveY.value);\r\n      }\r\n      if (state.zooming && touches.length === 2) {\r\n        const distance = getDistance(touches);\r\n        const scale = startScale * distance / startDistance;\r\n        setScale(scale);\r\n      }\r\n    };\r\n    const checkTap = () => {\r\n      if (fingerNum > 1) {\r\n        return;\r\n      }\r\n      const {\r\n        offsetX,\r\n        offsetY\r\n      } = touch;\r\n      const deltaTime = Date.now() - touchStartTime;\r\n      const TAP_TIME = 250;\r\n      const TAP_OFFSET = 5;\r\n      if (offsetX.value < TAP_OFFSET && offsetY.value < TAP_OFFSET) {\r\n        if (deltaTime < TAP_TIME) {\r\n          if (doubleTapTimer) {\r\n            clearTimeout(doubleTapTimer);\r\n            doubleTapTimer = null;\r\n            toggleScale();\r\n          } else {\r\n            doubleTapTimer = setTimeout(() => {\r\n              emit(\"close\");\r\n              doubleTapTimer = null;\r\n            }, TAP_TIME);\r\n          }\r\n        } else if (deltaTime > LONG_PRESS_START_TIME) {\r\n          emit(\"longPress\");\r\n        }\r\n      }\r\n    };\r\n    const onTouchEnd = (event) => {\r\n      let stopPropagation = false;\r\n      if (state.moving || state.zooming) {\r\n        stopPropagation = true;\r\n        if (state.moving && startMoveX === state.moveX && startMoveY === state.moveY) {\r\n          stopPropagation = false;\r\n        }\r\n        if (!event.touches.length) {\r\n          if (state.zooming) {\r\n            state.moveX = clamp(state.moveX, -maxMoveX.value, maxMoveX.value);\r\n            state.moveY = clamp(state.moveY, -maxMoveY.value, maxMoveY.value);\r\n            state.zooming = false;\r\n          }\r\n          state.moving = false;\r\n          startMoveX = 0;\r\n          startMoveY = 0;\r\n          startScale = 1;\r\n          if (state.scale < 1) {\r\n            resetScale();\r\n          }\r\n          if (state.scale > props.maxZoom) {\r\n            state.scale = +props.maxZoom;\r\n          }\r\n        }\r\n      }\r\n      preventDefault(event, stopPropagation);\r\n      checkTap();\r\n      touch.reset();\r\n    };\r\n    const onLoad = (event) => {\r\n      const {\r\n        naturalWidth,\r\n        naturalHeight\r\n      } = event.target;\r\n      state.imageRatio = naturalHeight / naturalWidth;\r\n    };\r\n    watch(() => props.active, resetScale);\r\n    watch(() => props.show, (value) => {\r\n      if (!value) {\r\n        resetScale();\r\n      }\r\n    });\r\n    useEventListener(\"touchmove\", onTouchMove, {\r\n      target: computed(() => {\r\n        var _a;\r\n        return (_a = swipeItem.value) == null ? void 0 : _a.$el;\r\n      })\r\n    });\r\n    return () => {\r\n      const imageSlots = {\r\n        loading: () => _createVNode(Loading, {\r\n          \"type\": \"spinner\"\r\n        }, null)\r\n      };\r\n      return _createVNode(SwipeItem, {\r\n        \"ref\": swipeItem,\r\n        \"class\": bem(\"swipe-item\"),\r\n        \"onTouchstartPassive\": onTouchStart,\r\n        \"onTouchend\": onTouchEnd,\r\n        \"onTouchcancel\": onTouchEnd\r\n      }, {\r\n        default: () => [slots.image ? _createVNode(\"div\", {\r\n          \"class\": bem(\"image-wrap\")\r\n        }, [slots.image({\r\n          src: props.src\r\n        })]) : _createVNode(Image, {\r\n          \"src\": props.src,\r\n          \"fit\": \"contain\",\r\n          \"class\": bem(\"image\", {\r\n            vertical: vertical.value\r\n          }),\r\n          \"style\": imageStyle.value,\r\n          \"onLoad\": onLoad\r\n        }, imageSlots)]\r\n      });\r\n    };\r\n  }\r\n});\r\nexport {\r\n  stdin_default as default\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}